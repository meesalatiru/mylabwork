<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-lazy-init="true">

    <!-- Add new DAOs here -->

    <!-- Add new Managers here -->
	<!--
		This is the main configuration file for our JPA work. All the magic is
		here.
	-->
	<!--
		First we set up a nice little property configurer, so you can just
		modify jdbc.properties to point to a different database.
	-->
	<!--
		First we set up a nice little property configurer, so you can just
		modify jdbc.properties to point to a different database.
	-->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:net/sf/ejcrm/integration/jdbc.properties</value>
				<value>classpath:net/sf/ejcrm/mail.properties</value>
			</list>
		</property>
	</bean>
	<!--
		Now we set up a simple datasource. Use a better one in production.
	-->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
</beans>