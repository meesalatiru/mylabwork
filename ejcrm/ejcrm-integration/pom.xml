<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>net.sf</groupId>
		<artifactId>ejcrm</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.sf.ejcrm</groupId>
	<artifactId>ejcrm-integration</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>EJCRM Integration Application</name>
	<url>http://www.sourceforge.net/ejcrm</url>
	<prerequisites>
		<maven>2.0.6</maven>
	</prerequisites>
	<licenses>
		<license>
			<name></name>
			<url></url>
		</license>
	</licenses>
	<scm>
	</scm>
	<issueManagement>
		<system></system>
		<url></url>
	</issueManagement>
	<developers>
		<developer>
			<id></id>
			<name></name>
			<email></email>
			<timezone></timezone>
		</developer>
	</developers>
	<build>
		<defaultGoal>install</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appfuse-maven-plugin</artifactId>
				<version>${appfuse.version}</version>
				<configuration>
					<genericCore>${amp.genericCore}</genericCore>
					<fullSource>${amp.fullSource}</fullSource>
				</configuration>
                <!-- Dependency needed by appfuse:gen-model to connect to database. -->
                <!-- See http://issues.appfuse.org/browse/APF-868 to learn more.    -->
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.0-beta-2</version>
				<configuration>
					<source>1.5</source>
					<verbose>true</verbose>
					<complianceLevel>1.5</complianceLevel>
					<showWeaveInfo>true</showWeaveInfo>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>1.6.0</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>1.6.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>1.5</wtpversion>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
							<implementation>jpaconfiguration</implementation>
                            <!-- <implementation>annotationconfiguration</implementation>-->
                            <!-- Use 'jpaconfiguration' if you're using JPA. -->
                            <!--<implementation>jpaconfiguration</implementation>-->
						</component>
					</components>
					<componentProperties>
						<drop>true</drop>
						<jdk5>true</jdk5>
						<propertyfile>target/test-classes/jdbc.properties</propertyfile>
						<skip>${maven.test.skip}</skip>
					</componentProperties>
				</configuration>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<goals>
							<goal>hbm2ddl</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<configuration>
					<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
					<driver>${jdbc.driverClassName}</driver>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
					<url>${jdbc.url}</url>
					<src>src/test/resources/sample-data.xml</src>
					<type>${dbunit.operation.type}</type>
					<schema>${dbunit.schema}</schema>
					<skip>${maven.test.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>
	<repositories>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>appfuse</id>
			<url>http://static.appfuse.org/repository</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>appfuse</id>
			<url>http://static.appfuse.org/repository</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<dependency>
			<groupId>org.appfuse</groupId>
			<artifactId>appfuse-service</artifactId>
			<version>${appfuse.version}</version>
			<!--
				This exclusion and the dependency following this one allow DAO
				framework switching.
			-->
			<!--
				You only need these if you want to use JPA or iBATIS. See APF-565
				for more information.
			-->
			<!--
				It does no harm to leave it in for Hibernate, but it's not needed.
			-->
			<exclusions>
				<exclusion>
					<groupId>org.appfuse</groupId>
					<artifactId>appfuse-hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.appfuse</groupId>
			<artifactId>appfuse-${dao.framework}</artifactId>
			<version>${appfuse.version}</version>
		</dependency>
		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>${jmock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>${jmock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.subethamail</groupId>
			<artifactId>subethasmtp-wiser</artifactId>
			<version>${wiser.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hibernate-entitymanager</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.3.1.GA</version>
		</dependency>
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>javassist</artifactId>
			<version>3.3.ga</version>
		</dependency>
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>jboss-common-core</artifactId>
			<version>2.0.4.GA</version>
		</dependency>
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>jboss-common-logging-spi</artifactId>
			<version>2.0.4.GA</version>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-changes-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<linkXref>true</linkXref>
					<targetJdk>1.5</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
        <!-- ================= Production Settings Profile ================= -->
        <!-- Use "-P prod" when you want to use the settings in this profile -->
        <!-- =============================================================== -->
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<!--
						Override location of data file for DbUnit to load (doesn't have
						negative keys)
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<configuration>
							<src>src/main/resources/default-data.xml</src>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

        <!-- ================= Database Profiles ================= -->
		<profile>
			<id>derby</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.DerbyDialect</hibernate.dialect>
				<jdbc.groupId>org.apache.derby</jdbc.groupId>
				<jdbc.artifactId>derbyclient</jdbc.artifactId>
				<jdbc.version>10.2.2.0</jdbc.version>
				<jdbc.driverClassName>org.apache.derby.jdbc.ClientDriver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:derby://localhost/ejcrm_business;create=true]]></jdbc.url>
				<jdbc.username>any</jdbc.username>
				<jdbc.password>value</jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>h2</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
				<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
				<jdbc.groupId>com.h2database</jdbc.groupId>
				<jdbc.artifactId>h2</jdbc.artifactId>
				<jdbc.version>1.0.20061217</jdbc.version>
				<jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:h2:${java.io.tmpdir}/ejcrm_business]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>hsqldb</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
				<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
				<jdbc.groupId>hsqldb</jdbc.groupId>
				<jdbc.artifactId>hsqldb</jdbc.artifactId>
				<jdbc.version>1.8.0.7</jdbc.version>
				<jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:hsqldb:mem:ejcrm_business;shutdown=true]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.oracle.OracleDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.schema>SYSTEM</dbunit.schema> <!-- Make sure to capitalize the schema name -->
				<hibernate.dialect>org.hibernate.dialect.Oracle9Dialect</hibernate.dialect>
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc14</jdbc.artifactId>
				<jdbc.version>10.2.0.2.0</jdbc.version>
				<jdbc.driverClassName>oracle.jdbc.OracleDriver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:oracle:thin:@localhost:1521:XE]]></jdbc.url>
				<jdbc.username>system</jdbc.username>
				<jdbc.password>system</jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>postgresql</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
				<jdbc.groupId>postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>8.1-407.jdbc3</jdbc.version>
				<jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:postgresql://localhost/ejcrm_business]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password>postgres</jdbc.password>
			</properties>
		</profile>
		<profile>
			<!--
				You need to enable TCP/IP Connections for SQL Server 2005 after
				installing.
			-->
            <!-- http://www.mattwoodward.com/blog/index.cfm?commentID=211 -->
			<id>sqlserver</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.mssql.MsSqlDataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>MSSQL_CLEAN_INSERT</dbunit.operation.type>
				<hibernate.dialect>org.hibernate.dialect.SQLServerDialect</hibernate.dialect>
				<jdbc.groupId>net.sourceforge.jtds</jdbc.groupId>
				<jdbc.artifactId>jtds</jdbc.artifactId>
				<jdbc.version>1.2</jdbc.version>
				<jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:jtds:sqlserver://localhost:3683/ejcrm_business]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password>appfuse</jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>db</id>
			<properties>
				<jpa.provider> org.hibernate.ejb.HibernatePersistence
				</jpa.provider>
				<jpa.vendor.adapter>
					org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter
				</jpa.vendor.adapter>
				<jpa.database>HSQLB</jpa.database>
				<jpa.database.platform> org.hibernate.dialect.HSQLDialect
				</jpa.database.platform>
				<jpa.weaver>
				<![CDATA[
					<!-- weavers not used in this configuration
					-->
				]]>
				</jpa.weaver>
			</properties>
			<build>
				<defaultGoal>process-classes</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>process-classes</id>
								<phase>process-classes</phase>
								<configuration>
									<tasks>
										<property name="export" value="false" />
										<mkdir dir="./target/generated-sources/schema" />
										<taskdef name="hibernatetool"
											classname="org.hibernate.tool.ant.HibernateToolTask" />
										<hibernatetool destdir="target/generated-sources">
											<classpath refid="maven.compile.classpath" />
											<ejb3configuration />
											<hbm2ddl drop="true" create="true" export="${export}"
												outputfilename="schema/agoraBB.ddl" delimiter=";" format="true" />
										</hibernatetool>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.appfuse</groupId>
								<artifactId>appfuse-service</artifactId>
								<version>${appfuse.version}</version>
								<!--
									This exclusion and the dependency following this one allow DAO
									framework switching.
								-->
								<!--
									You only need these if you want to use JPA or iBATIS. See
									APF-565 for more information.
								-->
								<!--
									It does no harm to leave it in for Hibernate, but it's not
									needed.
								-->
								<exclusions>
									<exclusion>
										<groupId>org.appfuse</groupId>
										<artifactId>appfuse-hibernate</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.appfuse</groupId>
								<artifactId>appfuse-${dao.framework}</artifactId>
								<version>${appfuse.version}</version>
							</dependency>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
							<dependency>
								<groupId>org.jmock</groupId>
								<artifactId>jmock</artifactId>
								<version>${jmock.version}</version>
								<scope>test</scope>
							</dependency>
							<dependency>
								<groupId>org.jmock</groupId>
								<artifactId>jmock-junit4</artifactId>
								<version>${jmock.version}</version>
								<scope>test</scope>
							</dependency>
							<dependency>
								<groupId>junit</groupId>
								<artifactId>junit</artifactId>
								<version>${junit.version}</version>
								<scope>test</scope>
							</dependency>
							<dependency>
								<groupId>org.springframework</groupId>
								<artifactId>spring-test</artifactId>
								<version>${spring.version}</version>
								<scope>test</scope>
							</dependency>
							<dependency>
								<groupId>org.subethamail</groupId>
								<artifactId>subethasmtp-wiser</artifactId>
								<version>${wiser.version}</version>
								<scope>test</scope>
							</dependency>
							<dependency>
								<groupId>hibernate-entitymanager</groupId>
								<artifactId>hibernate-entitymanager</artifactId>
								<version>3.3.1.GA</version>
							</dependency>
							<dependency>
								<groupId>jboss</groupId>
								<artifactId>javassist</artifactId>
								<version>3.3.ga</version>
							</dependency>
							<dependency>
								<groupId>jboss</groupId>
								<artifactId>jboss-common-core</artifactId>
								<version>2.0.4.GA</version>
							</dependency>
							<dependency>
								<groupId>jboss</groupId>
								<artifactId>jboss-common-logging-spi</artifactId>
								<version>2.0.4.GA</version>
							</dependency>
							<dependency>
								<groupId>org.hibernate</groupId>
								<artifactId>hibernate-tools</artifactId>
								<version>3.2.0.ga</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<properties>
        <!-- Application settings -->
		<dao.framework>hibernate</dao.framework>
		<amp.genericCore>true</amp.genericCore>
		<amp.fullSource>false</amp.fullSource>

        <!-- Framework dependency versions -->
		<appfuse.version>2.0.2</appfuse.version>
		<spring.version>2.5.4</spring.version>

        <!-- Testing dependency versions -->
		<jmock.version>2.4.0</jmock.version>
		<junit.version>4.4</junit.version>
		<wiser.version>1.2</wiser.version>
        <!-- Database settings -->
		<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
		<dbunit.schema>PUBLIC</dbunit.schema> <!-- Make sure to capitalize the schema name -->
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
		<hibernate.hbm2ddl.auto>create-drop</hibernate.hbm2ddl.auto>
		<jdbc.groupId>hsqldb</jdbc.groupId>
		<jdbc.artifactId>hsqldb</jdbc.artifactId>
		<jdbc.version>1.8.0.2</jdbc.version>
		<jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
		<jdbc.url><![CDATA[jdbc:hsqldb:C:\projectos\ejcrm\ej_core;create=true;shutdown=true]]></jdbc.url>
		<jdbc.username>sa</jdbc.username>
		<jdbc.password></jdbc.password>
	</properties>
</project>